# This is a basic workflow to help you get started with Actions

name: build container

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - feature/**
      - release/**
    # Publish `v1.2.3` tags as releases.
    tags:        
      - '**'
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: covid19_nsw

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # Runs the build job
    runs-on: ubuntu-latest

    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: make build

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image to Github Registry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION


  # This workflow contains a single job called "build"
  publish:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    container:
      image: ${{ github.actor }}/docker.datascience:latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Clone repository
        run: cd /home/vscode && git clone https://github.com/hsteinshiromoto/covid19_nsw.git

      # Runs a single command using the runners shell
      - name: Create html file
        run: cd /home/vscode/covid19_nsw && bash bin/blog_publish.sh Bayesian_exponential_model 
        
      - uses: actions/upload-artifact@v2
        with:
          name: Bayesian_exponential_model
          path: /home/vscode/covid19_nsw/notebooks/Bayesian_exponential_model.html
          if-no-files-found: error
          retention-days: 7
